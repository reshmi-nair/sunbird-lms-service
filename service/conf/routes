# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# User management APIs
POST	/v1/user/create				            @controllers.usermanagement.UserController.createUser(request: play.mvc.Http.Request)
POST	/v2/user/create				            @controllers.usermanagement.UserController.createUserV2(request: play.mvc.Http.Request)
POST	/v3/user/create				            @controllers.usermanagement.UserController.createUserV3Sync(request: play.mvc.Http.Request)
#/v4/user/create is used only Managed-User creation, this is not for regular user creation.
POST  /v4/user/create                   @controllers.usermanagement.UserController.createUserV4(request: play.mvc.Http.Request)
POST  /v1/user/signup                   @controllers.usermanagement.UserController.createUserV3(request: play.mvc.Http.Request)
PATCH	/v1/user/update					          @controllers.usermanagement.UserController.updateUser(request: play.mvc.Http.Request)

GET  	/v1/user/read/:uid				        @controllers.usermanagement.UserController.getUserByIdV3(uid:String, request: play.mvc.Http.Request)
GET  	/v2/user/read/:uid				        @controllers.usermanagement.UserController.getUserByIdV3(uid:String, request: play.mvc.Http.Request)
GET  	/v3/user/read/:uid				        @controllers.usermanagement.UserController.getUserByIdV3(uid:String, request: play.mvc.Http.Request)
GET     /private/user/v1/read/:externalId       @controllers.usermanagement.UserController.getUserByIdV3(externalId:String, request: play.mvc.Http.Request)

POST  /v1/user/getuser                  @controllers.usermanagement.UserController.getUserByLoginId(request: play.mvc.Http.Request)
GET   /v1/user/get/:idType/:id          @controllers.usermanagement.UserController.getUserByKey(idType:String, id:String, request: play.mvc.Http.Request)
POST  /v1/user/search					 @controllers.usermanagement.UserController.searchUser(request: play.mvc.Http.Request)
POST  /private/user/v1/search            @controllers.usermanagement.UserController.searchUser(request: play.mvc.Http.Request)
POST  /private/user/v1/lookup            @controllers.usermanagement.UserController.userLookup(request: play.mvc.Http.Request)
GET  /v1/user/managed/:lua_uuid           @controllers.usermanagement.UserController.getManagedUsers(lua_uuid:String, request: play.mvc.Http.Request)
GET  /v2/user/exists/:key/:value        @controllers.usermanagement.UserController.userExists(key:String, value:String, request: play.mvc.Http.Request)

POST  /v1/user/block			        @controllers.usermanagement.UserStatusController.blockUser(request: play.mvc.Http.Request)
POST  /v1/user/unblock			      @controllers.usermanagement.UserStatusController.unblockUser(request: play.mvc.Http.Request)

GET   /v1/role/read						    @controllers.usermanagement.UserRoleController.getRoles(request: play.mvc.Http.Request)
POST  /v1/user/assign/role			  @controllers.usermanagement.UserRoleController.assignRoles(request: play.mvc.Http.Request)
POST  /private/user/v1/assign/role	  @controllers.usermanagement.UserRoleController.assignRoles(request: play.mvc.Http.Request)

PATCH /v1/user/update/logintime	  @controllers.usermanagement.UserLoginController.updateLoginTime(request: play.mvc.Http.Request)

POST  /v1/user/tnc/accept         @controllers.tac.UserTnCController.acceptTnC(request: play.mvc.Http.Request)
GET   /v1/user/type/list						    @controllers.usermanagement.UserTypeController.getUserTypes(request: play.mvc.Http.Request)
PATCH /private/user/v1/account/merge @controllers.usermanagement.UserMergeController.mergeUser(request: play.mvc.Http.Request)

# Organisation management APIs
POST  /v1/org/create		    @controllers.organisationmanagement.OrgController.createOrg(request: play.mvc.Http.Request)
PATCH	/v1/org/update		    @controllers.organisationmanagement.OrgController.updateOrg(request: play.mvc.Http.Request)
PATCH	/v1/org/status/update @controllers.organisationmanagement.OrgController.updateOrgStatus(request: play.mvc.Http.Request)
POST  /v1/org/read          @controllers.organisationmanagement.OrgController.getOrgDetails(request: play.mvc.Http.Request)
POST  /v1/org/search		    @controllers.organisationmanagement.OrgController.search(request: play.mvc.Http.Request)

POST  /v1/org/member/add		@controllers.organisationmanagement.OrgMemberController.addMemberToOrganisation(request: play.mvc.Http.Request)
POST  /v1/org/member/remove	@controllers.organisationmanagement.OrgMemberController.removeMemberFromOrganisation(request: play.mvc.Http.Request)

POST	/v1/org/type/create	@controllers.organisationmanagement.OrgTypeController.createOrgType(request: play.mvc.Http.Request)
PATCH	/v1/org/type/update	@controllers.organisationmanagement.OrgTypeController.updateOrgType(request: play.mvc.Http.Request)
GET		/v1/org/type/list		@controllers.organisationmanagement.OrgTypeController.listOrgType(request: play.mvc.Http.Request)
GET    /v1/user/exists/:key/:value         @controllers.usermanagement.UserController.isUserValid(key:String, value:String, request: play.mvc.Http.Request)

#search
# POST	/v1/search/compositesearch  			@controllers.search.SearchController.compositeSearch(request: play.mvc.Http.Request)
#Sync
POST /v1/data/sync                          @controllers.search.SearchController.sync(request: play.mvc.Http.Request)

#Mock APIs to finish API Gateway onboarding
# GET /threaddump									@controllers.ThreadDumpController.threaddump(request: play.mvc.Http.Request)

# Bulk upload APIs
POST /v1/user/upload                    @controllers.bulkapimanagement.BulkUploadController.userBulkUpload(request: play.mvc.Http.Request)
POST /v2/bulk/user/upload                   @controllers.bulkapimanagement.BulkUploadController.userBulkMigrate(request: play.mvc.Http.Request)
# POST /v1/bulk/user/upload               @controllers.bulkapimanagement.BulkUploadController.userBulkUpload(request: play.mvc.Http.Request)
POST /v1/org/upload                     @controllers.bulkapimanagement.BulkUploadController.orgBulkUpload(request: play.mvc.Http.Request)
POST /v1/bulk/location/upload           @controllers.bulkapimanagement.BulkUploadController.locationBulkUpload(request: play.mvc.Http.Request)
GET  /v1/upload/status/:pid             @controllers.bulkapimanagement.BulkUploadController.getUploadStatus(pid:String, request: play.mvc.Http.Request)
# GET  /v1/upload/statusDownloadLink/:pid @controllers.bulkapimanagement.BulkUploadController.getStatusDownloadLink(pid:String, request: play.mvc.Http.Request)

POST  /v1/file/upload 						@controllers.storage.FileStorageController.uploadFileService(request: play.mvc.Http.Request)

#Email
POST /v1/notification/email					@controllers.notificationservice.EmailServiceController.sendMail(request: play.mvc.Http.Request)
POST /private/user/v1/notification/email	@controllers.notificationservice.EmailServiceController.sendMail(request: play.mvc.Http.Request)
POST /v2/notification					    @controllers.notificationservice.EmailServiceController.sendNotification(request: play.mvc.Http.Request)

#Health check
GET  /health                                  @controllers.healthmanager.HealthController.getHealth(request: play.mvc.Http.Request)
GET  /:service/health                      @controllers.healthmanager.HealthController.getLearnerServiceHealth(service:String, request: play.mvc.Http.Request)

#Notes API
POST   /v1/note/create                         @controllers.notesmanagement.NotesController.createNote(request: play.mvc.Http.Request)
GET    /v1/note/read/:noteId                   @controllers.notesmanagement.NotesController.getNote(noteId:String, request: play.mvc.Http.Request)
PATCH  /v1/note/update/:noteId                 @controllers.notesmanagement.NotesController.updateNote(noteId:String, request: play.mvc.Http.Request)
POST   /v1/note/search                         @controllers.notesmanagement.NotesController.searchNote(request: play.mvc.Http.Request)
DELETE /v1/note/delete/:noteId                 @controllers.notesmanagement.NotesController.deleteNote(noteId:String, request: play.mvc.Http.Request)

#T&C
POST  /v2/org/preferences/create 						@controllers.tenantpreference.TenantPreferenceController.createTenantPreference(request: play.mvc.Http.Request)
PATCH  /v2/org/preferences/update 						@controllers.tenantpreference.TenantPreferenceController.updateTenantPreference(request: play.mvc.Http.Request)
POST  /v2/org/preferences/read					@controllers.tenantpreference.TenantPreferenceController.getTenantPreference(request: play.mvc.Http.Request)

#GEO LOCATION API
# POST /v1/notification/location/create                @controllers.geolocation.GeoLocationController.createGeoLocation(request: play.mvc.Http.Request)
# GET  /v1/notification/location/read/:id               @controllers.geolocation.GeoLocationController.getGeoLocation(id:String, request: play.mvc.Http.Request)
# PATCH  /v1/notification/location/update/:locationId   @controllers.geolocation.GeoLocationController.updateGeoLocation(locationId:String, request: play.mvc.Http.Request)
# DELETE   /v1/notification/location/delete/:locationId  @controllers.geolocation.GeoLocationController.deleteGeoLocation(locationId:String, request: play.mvc.Http.Request)
# POST    /v1/notification/send             @controllers.geolocation.GeoLocationController.sendNotification(request: play.mvc.Http.Request)
# POST    /v1/notification/audience             @controllers.geolocation.GeoLocationController.getUserCount(request: play.mvc.Http.Request)

#Location API
POST   /v1/location/create                      @controllers.location.LocationController.createLocation(request: play.mvc.Http.Request)
PATCH  /v1/location/update                      @controllers.location.LocationController.updateLocation(request: play.mvc.Http.Request)
POST   /v1/location/search                      @controllers.location.LocationController.searchLocation(request: play.mvc.Http.Request)
DELETE /v1/location/delete/:locationId                      @controllers.location.LocationController.deleteLocation(locationId:String, request: play.mvc.Http.Request)

# System Settings APIs
GET   /v1/system/settings/get/:field      @controllers.systemsettings.SystemSettingsController.getSystemSetting(field:String, request: play.mvc.Http.Request)
GET   /v1/system/settings/list               @controllers.systemsettings.SystemSettingsController.getAllSystemSettings(request: play.mvc.Http.Request)
POST  /v1/system/settings/set                 @controllers.systemsettings.SystemSettingsController.setSystemSetting(request: play.mvc.Http.Request)


# OTP APIs
POST /v1/otp/generate @controllers.otp.OtpController.generateOTP(request: play.mvc.Http.Request)
POST /v1/otp/verify   @controllers.otp.OtpController.verifyOTP(request: play.mvc.Http.Request)

#Tenant Migration
PATCH /private/user/v1/migrate  				@controllers.tenantmigration.TenantMigrationController.userTenantMigrate(request: play.mvc.Http.Request)

#Freeup API
POST /private/user/v1/identifier/freeup        @controllers.usermanagement.IdentifierFreeUpController.freeUpIdentifier(request: play.mvc.Http.Request)

#reset password API
POST /private/user/v1/password/reset        @controllers.usermanagement.ResetPasswordController.resetPassword(request: play.mvc.Http.Request)

#user certificate validate API
POST /v1/user/migrate            @controllers.tenantmigration.TenantMigrationController.shadowUserMigrate(request: play.mvc.Http.Request)
# POST /private/user/v1/certs/validate @controllers.certmanagement.CertificateController.validateCertificate(request: play.mvc.Http.Request)
# POST /private/user/v1/certs/add  @controllers.certmanagement.CertificateController.addCertificate(request: play.mvc.Http.Request)
# POST  /v1/user/certs/download    @controllers.certmanagement.CertificateController.getSignUrl(request: play.mvc.Http.Request)
# PATCH /private/user/v1/certs/merge @controllers.certmanagement.CertificateController.mergeCertificate(request: play.mvc.Http.Request)
PATCH  /v1/org/assign/key         @controllers.organisationmanagement.KeyManagementController.assignKeys(request: play.mvc.Http.Request)

#User Feed API
GET   /v1/user/feed/:userId       @controllers.feed.FeedController.getUserFeed(userId:String,request: play.mvc.Http.Request)
POST  /v1/user/feed/create        @controllers.feed.FeedController.createUserFeed(request: play.mvc.Http.Request)
POST  /private/user/feed/v1/create        @controllers.feed.FeedController.createUserFeed(request: play.mvc.Http.Request)
POST  /v1/user/feed/delete        @controllers.feed.FeedController.deleteUserFeed(request: play.mvc.Http.Request)
PATCH  /v1/user/feed/update       @controllers.feed.FeedController.updateUserFeed(request: play.mvc.Http.Request)

POST /private/user/v1/scheduler @controllers.scheduler.SchedulerController.startScheduler(request: play.mvc.Http.Request)

PATCH  /v1/user/declarations      @controllers.usermanagement.UserController.updateUserDeclarations(request: play.mvc.Http.Request)

# User Consent APIs
POST /v1/user/consent/update @controllers.usermanagement.UserConsentController.updateUserConsent(request: play.mvc.Http.Request)
POST /v1/user/consent/read @controllers.usermanagement.UserConsentController.getUserConsent(request: play.mvc.Http.Request)